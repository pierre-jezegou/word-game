'''Compute theorical model of number of sub-words generated by a word'''
import math

def complexity(m: int, k: int) -> int:
    '''Gives the number of combination'''
    return math.factorial(m) // (math.factorial(k) * math.factorial(m - k))

def total_combination(m:int , min_length:int =3) -> int:
    counter = 0
    for i in range(min_length, m):
        counter += complexity(m, i)
    return counter

def main():
    letters_length = [i for i in range(3,25)]
    counters = [total_combination(i) for i in letters_length]

    for i in range(len(letters_length)):
        print(f"(%s, %s)" % (letters_length[i], counters[i]))

if __name__=="__main__":
    main()
